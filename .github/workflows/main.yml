name: 'CI/CD'

on:
  push:
    branches:
      - '**'

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  check:
    name: 'Lint and Test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NVMRC }}

      - name: Install Dependencies
        run: npm install

      - name: Run Linting
        run: npm run lint

      - name: Run Tests
        run: npm run test

  publish-tauri:
    name: 'Build and Publish'
    needs: check  # This ensures lint and test pass before building
    if: github.ref == 'refs/heads/release'  # Only run on release branch
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-20.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    env:
      NODE_OPTIONS: '--max-old-space-size=4096'  # Higher heap memory limit is needed for Tauri build

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install

      # Add polkit policy file for Linux
      - name: Setup Linux privileges
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo mkdir -p /usr/share/polkit-1/actions
          echo '${{ secrets.POLKIT_POLICY }}' | sudo tee /usr/share/polkit-1/actions/com.yourdomain.app.policy

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
